{"version":3,"file":"static/js/968.c59c9385.chunk.js","mappings":"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","sources":["components/AuthForms/LoginForm.styled.jsx","components/Backdrop/Backdrop.styled.js","components/Backdrop/Backdrop.jsx","components/ConfirmModal/ConfirmModal.styled.jsx","components/AuthForms/LoginForm.jsx","components/RestorePasswordForm/RestorePassword.styled.jsx","components/RestorePasswordForm/RestorePasswordForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport MaskedInput from 'react-text-mask';\nimport mobileBackground from '../../images/mobileAuthBackground.png';\nimport tabletBackground from '../../images/tableAuthBackground.png';\nimport desktopBackground from '../../images/desktopAuthBackground.png';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 58px);\n  background-image: url(${mobileBackground});\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  @media (min-width: 768px) {\n    background-image: url(${tabletBackground});\n    padding-top: 184px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n  }\n  @media (min-width: 1280px) {\n    background-image: url(${desktopBackground});\n    padding-top: 50px;\n    padding-bottom: 147px;\n  }\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const Form1 = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  padding-bottom: 40px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: #fff;\n    border-radius: 40px;\n    -webkit-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    -moz-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\nexport const PhoneInput = styled(MaskedInput)`\n  width: 280px;\n  padding: 11px 0 12px 14px;\n  background: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    padding: 14px 0 13px 32px;\n    font-size: 18px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\nexport const ForgotPassword = styled.button`\n  position: absolute;\n  right: 0px;\n  bottom: 0;\n  background-color: transparent;\n  border: none;\n  text-decoration: underline;\n  color: ${p => p.theme.colors.link};\n\n  transition: color ${p => p.theme.transition};\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #f59256;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const BackButton = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #000;\n  background: #fff;\n  border: 1px solid #f59256;\n  border-radius: 40px;\n  margin: -26px 0 40px 0;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 0.5s;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(245, 146, 86, 0.9),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0px;\n  left: 15px;\n  color: red;\n  font-size: 14px;\n  font-style: italic;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\n\nexport const ButtonModal = styled.button`\n  @media screen and (max-width: 767px) {\n    &:last-child {\n      margin-top: 12px;\n    }\n  }\n  cursor: pointer;\n  background-color: ${p =>\n    p.filling ? p.theme.colors.accent : p.theme.colors.secondaryBackground};\n  border: 2px solid ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.radii.mainBorderRadius};\n  color: ${p =>\n    p.filling ? p.theme.colors.secondaryBackground : p.theme.colors.accent};\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 240px;\n  height: 50px;\n  gap: 8px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n  letter-spacing: 0.04em;\n  transition: transform 0.5s;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    ${p => {\n      if (!p.filling) {\n        return `background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(245, 146, 86, 0.9),\n      transparent\n    );`;\n      } else {\n        return `\n      background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n      `;\n      }\n    }}\n    transition: all 650ms;\n  }\n  @media screen and (min-width: 768px) {\n    width: 448px;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const RefreshInput = styled(Field)`\n  width: 240px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const FormRef = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  padding-bottom: 40px;\n  margin: 0 auto;\n  background-color: #fff;\n  border-radius: 20px;\n  -webkit-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  -moz-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n\n  @media (min-width: 768px) {\n    width: 608px;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    border-radius: 40px;\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: ${p => p.theme.colors.link};\n  transition: color ${p => p.theme.transition};\n  :hover,\n  :focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n","import { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nexport const Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(17, 17, 17, 0.6);\n  backdrop-filter: blur(10px);\n  z-index: 1200;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow-y: scroll;\n`;\n\nexport const ModalWrapper = styled.div`\n  position: absolute;\n  top: 160px;\n  left: 50%;\n  transform: translateX(-50%);\n  padding-bottom: 160px;\n`;","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalWrapper } from './Backdrop.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport function Backdrop({ closeModal, children }) {\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      closeModal();\n    }\n  };\n\n  const handleBackdropDown = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    document.body.style.overflow = 'hidden';\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      document.body.style.overflow = 'auto';\n    };\n  });\n\n  return createPortal(\n    <Overlay\n      onClick={handleBackdropDown}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      <ModalWrapper>{children}</ModalWrapper>\n    </Overlay>,\n    modalRoot\n  );\n}\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  @media screen and (max-width: 767px) {\n    &:last-child {\n      margin-top: 12px;\n    }\n  }\n  cursor: pointer;\n  background-color: ${p =>\n    p.filling ? p.theme.colors.accent : p.theme.colors.secondaryBackground};\n  border: 2px solid ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.radii.mainBorderRadius};\n  color: ${p =>\n    p.filling ? p.theme.colors.secondaryBackground : p.theme.colors.black};\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 40px;\n  gap: 8px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n  letter-spacing: 0.04em;\n  transition: transform 0.5s;\n  position: relative;\n  overflow-x: hidden;\n  overflow-y: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n  }\n  :hover:before {\n    left: 100%;\n    @media screen and (max-width: 767px) {\n      visibility: visible;\n    }\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    @media screen and (max-width: 767px) {\n      visibility: hidden;\n    }\n    ${p => {\n      if (!p.filling) {\n        return `background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(245, 146, 86, 0.9),\n      transparent\n    );`;\n      } else {\n        return `\n      background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n      `;\n      }\n    }}\n    transition: all 650ms;\n  }\n  @media screen and (min-width: 768px) {\n    width: 160px;\n  }\n`;\n\nexport const Notification = styled.p`\n  margin-bottom: 16px;\n  font-weight: 600;\n  font-size: 20px;\n  line-height: calc(33 / 24);\n  letter-spacing: -0.01em;\n  color: ${p => p.theme.colors.black};\n  @media screen and (min-width: 768px) {\n    margin-bottom: 20px;\n    font-size: 24px;\n    line-height: calc(38 / 28);\n  }\n  svg {\n    fill: ${p => p.theme.colors.accent};\n    font-size: 30px;\n  }\n`;\n","import { useState } from 'react';\nimport { object, string } from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from '../../redux/auth/authSelectors';\nimport Spinner from 'components/Spinner/Spinner';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport {\n  Form1,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  ForgotPassword,\n  ShowPassword,\n  StyledLink,\n} from './LoginForm.styled';\nimport { login } from 'redux/auth/authOperations';\n\nconst SignupSchema = object().shape({\n  password: string()\n    .min(7, 'Too Short!')\n    .max(32, 'Too Long!')\n    .required('Password is required'),\n\n  email: string().email('Invalid email').required('Email Required'),\n});\n\nexport const LoginForm = ({ openModal }) => {\n  const loading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n  const [showPass, setShowPass] = useState(false);\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <FormContainer>\n          <Formik\n            initialValues={{\n              email: '',\n              password: '',\n            }}\n            validationSchema={SignupSchema}\n            onSubmit={({ email, password }, { resetForm }) => {\n              dispatch(login({ email, password }));\n\n              resetForm();\n            }}\n          >\n            {({ errors, touched }) => (\n              <Form1>\n                <Title>Login</Title>\n                <div>\n                  <Input name=\"email\" type=\"email\" placeholder=\"Email\" />\n\n                  {errors.email && touched.email ? (\n                    <ErrBox>{errors.email}</ErrBox>\n                  ) : null}\n                </div>\n                <div>\n                  <Input\n                    name=\"password\"\n                    type={showPass ? 'text' : 'password'}\n                    placeholder=\"Password\"\n                  />\n                  <ShowPassword onClick={showPassword}>\n                    {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                  </ShowPassword>\n                  <ForgotPassword type=\"button\" onClick={openModal}>\n                    Forgot password?\n                  </ForgotPassword>\n                  {errors.password && touched.password ? (\n                    <ErrBox>{errors.password}</ErrBox>\n                  ) : null}\n                </div>\n\n                <Button type=\"submit\">Login</Button>\n\n                <div>\n                  <span>Don't have an account?</span>{' '}\n                  <StyledLink to=\"/register\">Register</StyledLink>\n                </div>\n              </Form1>\n            )}\n          </Formik>\n        </FormContainer>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Button } from 'components/ConfirmModal/ConfirmModal.styled';\n\nexport const Input = styled.input`\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background-color: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 12px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-color: ${p => p.theme.colors.secondaryBackground};\n  border-radius: ${p => p.theme.radii.secondaryBorderRadius};\n  width: calc(100% - 40px);\n  padding: 40px 20px;\n\n  position: absolute;\n  top: 160px;\n  left: 50%;\n  transform: translateX(-50%);\n\n  @media screen and (min-width: 420px) {\n    width: 380px;\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 50%;\n    transform: translate(-50%, -50%);\n    padding: 32px 20px;\n    width: 704px;\n  }\n  label {\n    position: relative;\n    width: 100%;\n    @media screen and (min-width: 768px) {\n      width: 448px;\n      margin: 0 auto;\n    }\n  }\n  p {\n    margin-bottom: 16px;\n    font-weight: 500;\n    font-size: 18px;\n    line-height: 1.3;\n    letter-spacing: 0.01em;\n    color: ${p => p.theme.colors.black};\n    @media screen and (min-width: 768px) {\n      margin-bottom: 20px;\n      font-size: 20px;\n    }\n    @media screen and (min-width: 768px) {\n      width: 448px;\n      margin: 0 auto;\n    }\n  }\n\n  svg {\n    fill: ${p => p.theme.colors.accent};\n    font-size: 30px;\n  }\n`;\n\nexport const StyledButton = styled(Button)`\n  @media screen and (max-width: 767px) {\n    &:last-child {\n      margin-top: 0;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    width: 448px;\n    height: 48px;\n  }\n`;\n","import * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { restorePassword } from 'redux/auth/authOperations';\nimport { ErrBox } from 'components/AuthForms/LoginForm.styled';\nimport { Input, Form, StyledButton } from './RestorePassword.styled';\nimport { MdPets } from 'react-icons/md';\n\nexport const RestorePasswordForm = ({ closeModal }) => {\n  const dispatch = useDispatch();\n  const validationSchema = yup.object().shape({\n    email: yup.string().email('Invalid email').required('Email is required'),\n  });\n\n  const { handleSubmit, values, handleChange, errors, touched } = useFormik({\n    initialValues: {\n      email: '',\n    },\n    validationSchema,\n    onSubmit: values => {\n      dispatch(restorePassword(values));\n      closeModal();\n    },\n  });\n  return (\n    <Form onSubmit={handleSubmit}>\n      <p>\n        <MdPets /> To restore your password, enter your email address and\n        submit. We will send you a new password to your email.\n      </p>\n      <label>\n        <Input\n          type=\"email\"\n          onChange={handleChange}\n          name=\"email\"\n          value={values.email}\n          placeholder=\"Email\"\n        />\n        {errors.email || touched.email ? <ErrBox>{errors.email}</ErrBox> : null}\n      </label>\n      <StyledButton type=\"button\" onClick={closeModal}>\n        Cancel\n      </StyledButton>\n      <StyledButton type=\"submit\" filling>\n        Submit\n      </StyledButton>\n    </Form>\n  );\n};\n","import { LoginForm } from 'components/AuthForms/LoginForm';\nimport { Backdrop } from 'components/Backdrop/Backdrop';\nimport { RestorePasswordForm } from 'components/RestorePasswordForm/RestorePasswordForm';\nimport { useState } from 'react';\n\nconst LoginPage = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <>\n      <LoginForm openModal={openModal} />\n      {isModalOpen && (\n        <Backdrop closeModal={closeModal}>\n          <RestorePasswordForm closeModal={closeModal} />\n        </Backdrop>\n      )}\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["FormContainer","styled","mobileBackground","tabletBackground","desktopBackground","Title","Form1","Form","ShowPassword","Input","Field","PhoneInput","MaskedInput","ForgotPassword","p","theme","colors","link","transition","accent","Button","BackButton","ErrBox","ButtonModal","filling","secondaryBackground","radii","mainBorderRadius","RefreshInput","FormRef","StyledLink","Link","Overlay","motion","ModalWrapper","modalRoot","document","querySelector","Backdrop","closeModal","children","handleKeyDown","e","code","useEffect","window","addEventListener","body","style","overflow","removeEventListener","createPortal","onClick","currentTarget","target","initial","opacity","animate","exit","black","Notification","SignupSchema","object","shape","password","string","min","max","required","email","LoginForm","openModal","loading","useSelector","selectIsLoading","dispatch","useDispatch","useState","showPass","setShowPass","showPassword","Spinner","initialValues","validationSchema","onSubmit","resetForm","login","errors","touched","name","type","placeholder","to","secondaryBorderRadius","StyledButton","RestorePasswordForm","yup","useFormik","values","restorePassword","handleSubmit","handleChange","onChange","value","isModalOpen","setIsModalOpen"],"sourceRoot":""}