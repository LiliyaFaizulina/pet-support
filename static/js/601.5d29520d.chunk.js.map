{"version":3,"file":"static/js/601.5d29520d.chunk.js","mappings":"2NAEaA,EAAqBC,EAAAA,GAAAA,IAAH,yHAMlBC,EAAQD,EAAAA,GAAAA,GAAH,gDAGLE,GAAQF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sOAaLI,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,2OAYLM,EAASN,EAAAA,GAAAA,OAAH,+N,mBCVbO,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,SAAUF,EAAAA,KAEPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YAEZC,MAAON,EAAAA,KAAaM,MAAM,iBAAiBD,SAAS,cAGzCE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAAClB,EAAD,YACE,SAACE,EAAD,qBACA,SAAC,KAAD,CACEiB,cAAe,CACbJ,MAAO,GACPJ,SAAU,IAEZS,iBAAkBZ,EAClBa,SAAU,cAAyC,IAAtCN,EAAqC,EAArCA,MAAOJ,EAA8B,EAA9BA,SAAcW,EAAgB,EAAhBA,UAChCL,GAASM,EAAAA,EAAAA,IAAM,CAAER,MAAAA,EAAOJ,SAAAA,KAExBW,GACD,EAVH,SAYG,gBAAGE,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAACtB,EAAD,YACE,SAACE,EAAD,CAAOqB,KAAK,QAAQC,KAAK,QAAQC,YAAY,WAE7C,yBACGJ,EAAOT,OAASU,EAAQV,OACvB,yCAAeS,EAAOT,SACpB,QAGN,SAACV,EAAD,CAAOqB,KAAK,WAAWC,KAAK,WAAWC,YAAY,cAEnD,yBACGJ,EAAOb,UAAYc,EAAQd,UAC1B,4CAAkBa,EAAOb,YACvB,QAEN,SAACJ,EAAD,CAAQoB,KAAM,SAAd,qBAjBH,KAqBH,4BACE,qDADF,KACsC,cAAGE,KAAK,IAAR,2BAI3C,ECtED,EARkB,WAChB,OACE,+BACE,SAACb,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nexport const LoginFormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Title = styled.h2`\n  margin-bottom: 40px;\n`;\nexport const Form1 = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  align-items: center;\n  margin-bottom: 10px;\n  @media (min-width: 768px) {\n    background: #000;\n  }\n`;\n\nexport const Input = styled(Field)`\n  max-width: 264px;\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  background: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n`;\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #f59256;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  cursor: pointer;\n`;\n","import * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport {\n  Form1,\n  LoginFormContainer,\n  Input,\n  Button,\n  Title,\n} from './LoginForm.styled';\nimport { login } from 'redux/auth/authOperations';\n\n// import axios from 'axios';\n\n// const login = async userData => {\n//   try {\n//     const { data } = await axios.post(\n//       'http://localhost:4000/api/users/login',\n//       userData\n//     );\n//     return data;\n//   } catch (error) {\n//     return error;\n//   }\n// };\n\nconst SignupSchema = yup.object().shape({\n  password: yup\n    .string()\n    .min(7, 'Too Short!')\n    .max(32, 'Too Long!')\n    .required('Required'),\n\n  email: yup.string().email('Invalid email').required('Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <LoginFormContainer>\n      <Title>Login</Title>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={({ email, password }, { resetForm }) => {\n          dispatch(login({ email, password }));\n          // login({ email, password });\n          resetForm();\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form1>\n            <Input name=\"email\" type=\"email\" placeholder=\"Email\" />\n\n            <div>\n              {errors.email && touched.email ? (\n                <div>{`Email ${errors.email}`}</div>\n              ) : null}\n            </div>\n\n            <Input name=\"password\" type=\"password\" placeholder=\"Password\" />\n\n            <div>\n              {errors.password && touched.password ? (\n                <div>{`Password ${errors.password}`}</div>\n              ) : null}\n            </div>\n            <Button type={'submit'}>Login</Button>\n          </Form1>\n        )}\n      </Formik>\n      <div>\n        <span>Don't have an account?</span> <a href=\"/\">Register</a>\n      </div>\n    </LoginFormContainer>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["LoginFormContainer","styled","Title","Form1","Form","Input","Field","Button","SignupSchema","yup","shape","password","min","max","required","email","LoginForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","resetForm","login","errors","touched","name","type","placeholder","href"],"sourceRoot":""}