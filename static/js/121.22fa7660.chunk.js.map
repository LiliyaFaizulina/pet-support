{"version":3,"file":"static/js/121.22fa7660.chunk.js","mappings":"uOAGaA,EAAgBC,EAAAA,GAAAA,IAAH,sBACbC,EAAQD,EAAAA,GAAAA,GAAH,kEAILE,GAAQF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,ouBAgCLI,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,oZAoBLM,EAASN,EAAAA,GAAAA,OAAH,sUAeNO,EAASP,EAAAA,GAAAA,IAAH,qH,mBC7DbQ,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,SAAUF,EAAAA,KAEPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YAEZC,MAAON,EAAAA,KAAaM,MAAM,iBAAiBD,SAAS,oBAGzCE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACnB,EAAD,WACE,SAAC,KAAD,CACEoB,cAAe,CACbJ,MAAO,GACPJ,SAAU,IAEZS,iBAAkBZ,EAClBa,SAAU,cAAyC,IAAtCN,EAAqC,EAArCA,MAAOJ,EAA8B,EAA9BA,SAAcW,EAAgB,EAAhBA,UAChCL,GAASM,EAAAA,EAAAA,IAAM,CAAER,MAAAA,EAAOJ,SAAAA,KAExBW,GACD,EAVH,SAYG,gBAAGE,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAACvB,EAAD,YACE,SAACD,EAAD,qBACA,SAACG,EAAD,CAAOsB,KAAK,QAAQC,KAAK,QAAQC,YAAY,WAE7C,yBACGJ,EAAOT,OAASU,EAAQV,OACvB,SAACR,EAAD,UAASiB,EAAOT,QACd,QAGN,SAACX,EAAD,CAAOsB,KAAK,WAAWC,KAAK,WAAWC,YAAY,cAEnD,yBACGJ,EAAOb,UAAYc,EAAQd,UAC1B,SAACJ,EAAD,6BAAqBiB,EAAOb,YAC1B,QAEN,SAACL,EAAD,CAAQqB,KAAM,SAAd,oBACA,4BACE,qDAAoC,KACpC,SAAC,KAAD,CAAME,GAAG,YAAT,2BArBL,KA4BR,EC3DD,EARkB,WAChB,OACE,+BACE,SAACb,EAAD,KAGL,C","sources":["components/Login&RegisterForm/LoginForm.styled.jsx","components/Login&RegisterForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormContainer = styled.div``;\nexport const Title = styled.h2`\n  margin-bottom: 40px;\n  margin-top: 0;\n`;\nexport const Form1 = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  padding-bottom: 40px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    margin: 0 auto;\n    margin-top: 204px;\n    padding: 60px 0 40px 0;\n    background-color: #fff;\n    border-radius: 40px;\n    -webkit-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    -moz-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    margin-top: 80px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 264px;\n  padding: 11px 0 12px 14px;\n  background: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 414px;\n    padding: 14px 0 13px 32px;\n    font-size: 18px;\n  }\n  @media (min-width: 1280px) {\n    width: 424px;\n  }\n`;\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #f59256;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin: 24px 0 40px 0;\n  cursor: pointer;\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  top: -18px;\n  left: -55px;\n  color: red;\n`;\n","import * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport {\n  Form1,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n} from './LoginForm.styled';\nimport { login } from 'redux/auth/authOperations';\n\nconst SignupSchema = yup.object().shape({\n  password: yup\n    .string()\n    .min(7, 'Too Short!')\n    .max(32, 'Too Long!')\n    .required('Required'),\n\n  email: yup.string().email('Invalid email').required('Email Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={({ email, password }, { resetForm }) => {\n          dispatch(login({ email, password }));\n\n          resetForm();\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form1>\n            <Title>Login</Title>\n            <Input name=\"email\" type=\"email\" placeholder=\"Email\" />\n\n            <div>\n              {errors.email && touched.email ? (\n                <ErrBox>{errors.email}</ErrBox>\n              ) : null}\n            </div>\n\n            <Input name=\"password\" type=\"password\" placeholder=\"Password\" />\n\n            <div>\n              {errors.password && touched.password ? (\n                <ErrBox>{`Password ${errors.password}`}</ErrBox>\n              ) : null}\n            </div>\n            <Button type={'submit'}>Login</Button>\n            <div>\n              <span>Don't have an account?</span>{' '}\n              <Link to=\"/register\">Register</Link>\n            </div>\n          </Form1>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n","import { LoginForm } from 'components/Login&RegisterForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["FormContainer","styled","Title","Form1","Form","Input","Field","Button","ErrBox","SignupSchema","yup","shape","password","min","max","required","email","LoginForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","resetForm","login","errors","touched","name","type","placeholder","to"],"sourceRoot":""}