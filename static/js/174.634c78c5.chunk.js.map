{"version":3,"file":"static/js/174.634c78c5.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/motion/utils/VisualElementHandler.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/utils/types.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/use-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/use-pointer-event.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/gestures/use-hover-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/use-viewport.mjs","../node_modules/framer-motion/dist/es/motion/utils/make-renderless-component.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/use-tap-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/use-focus-gesture.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/use-pan-gesture.mjs","../node_modules/framer-motion/dist/es/gestures/drag/use-drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/index.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceId: presenceContext ? presenceContext.id : undefined,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const createDefinition = (propNames) => ({\n    isEnabled: (props) => propNames.some((name) => !!props[name]),\n});\nconst featureDefinitions = {\n    measureLayout: createDefinition([\"layout\", \"layoutId\", \"drag\"]),\n    animation: createDefinition([\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ]),\n    exit: createDefinition([\"exit\"]),\n    drag: createDefinition([\"drag\", \"dragControls\"]),\n    focus: createDefinition([\"whileFocus\"]),\n    hover: createDefinition([\"whileHover\", \"onHoverStart\", \"onHoverEnd\"]),\n    tap: createDefinition([\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"]),\n    pan: createDefinition([\n        \"onPan\",\n        \"onPanStart\",\n        \"onPanSessionStart\",\n        \"onPanEnd\",\n    ]),\n    inView: createDefinition([\n        \"whileInView\",\n        \"onViewportEnter\",\n        \"onViewportLeave\",\n    ]),\n};\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import React__default from 'react';\n\nclass VisualElementHandler extends React__default.Component {\n    /**\n     * Update visual element props as soon as we know this update is going to be commited.\n     */\n    getSnapshotBeforeUpdate() {\n        const { visualElement, props } = this.props;\n        if (visualElement)\n            visualElement.setProps(props);\n        return null;\n    }\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\n\nexport { VisualElementHandler };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { VisualElementHandler } from './utils/VisualElementHandler.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, projectionNodeConstructor, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        let features = null;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        /**\n         *\n         */\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const lazyStrictMode = useContext(LazyContext).strict;\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            if (context.visualElement) {\n                features = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, lazyStrictMode, preloadedFeatures, projectionId, projectionNodeConstructor ||\n                    featureDefinitions.projectionNodeConstructor, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(VisualElementHandler, { visualElement: context.visualElement, props: configAndProps },\n            features,\n            React.createElement(MotionContext.Provider, { value: context }, useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement))));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        if (key === \"projectionNodeConstructor\") {\n            featureDefinitions.projectionNodeConstructor = features[key];\n        }\n        else {\n            featureDefinitions[key].Component = features[key];\n        }\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => !!(value === null || value === void 0 ? void 0 : value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\n/**\n * A function to use with Array.sort to sort transform keys by their default order.\n */\nconst sortTransformProps = (a, b) => transformPropOrder.indexOf(a) - transformPropOrder.indexOf(b);\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform({ transform, transformKeys, }, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    // Transform keys into their default order - this will determine the output order.\n    transformKeys.sort(sortTransformProps);\n    // Loop over each transform and build them into transformString\n    for (const key of transformKeys) {\n        transformString += `${translateAlias[key] || key}(${transform[key]}) `;\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformKeys, transformOrigin } = state;\n    transformKeys.length = 0;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            transformKeys.push(key);\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformKeys: [],\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useEffect } from 'react';\n\nfunction addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n/**\n * Attaches an event listener directly to the provided DOM element.\n *\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\n * event handlers.\n *\n * ```jsx\n * const ref = useRef(null)\n *\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\n *\n * return <div ref={ref} />\n * ```\n *\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\n * @param eventName - Name of the event you want listen for.\n * @param handler - Function to fire when receiving the event.\n * @param options - Options to pass to `Event.addEventListener`.\n *\n * @public\n */\nfunction useDomEvent(ref, eventName, handler, options) {\n    useEffect(() => {\n        const element = ref.current;\n        if (handler && element) {\n            return addDomEvent(element, eventName, handler, options);\n        }\n    }, [ref, eventName, handler, options]);\n}\n\nexport { addDomEvent, useDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent, useDomEvent } from './use-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\nfunction usePointerEvent(ref, eventName, handler, options) {\n    return useDomEvent(ref, eventName, handler && addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent, usePointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { useMemo } from 'react';\n\nfunction createHoverEvent(visualElement, isActive, applyVariants, callback) {\n    return (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (applyVariants && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        callback && callback(event, info);\n    };\n}\nfunction useHoverGesture({ onHoverStart, onHoverEnd, whileHover, visualElement, }) {\n    usePointerEvent(visualElement, \"pointerenter\", useMemo(() => {\n        return onHoverStart || whileHover\n            ? createHoverEvent(visualElement, true, Boolean(whileHover), onHoverStart)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverStart });\n    usePointerEvent(visualElement, \"pointerleave\", useMemo(() => {\n        return onHoverEnd || whileHover\n            ? createHoverEvent(visualElement, false, Boolean(whileHover), onHoverEnd)\n            : undefined;\n    }, [onHoverStart, Boolean(whileHover), visualElement]), { passive: !onHoverEnd });\n}\n\nexport { useHoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { useRef, useEffect } from 'react';\nimport { AnimationType } from '../../../render/utils/types.mjs';\nimport { warnOnce } from '../../../utils/warn-once.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nfunction useViewport({ visualElement, whileInView, onViewportEnter, onViewportLeave, viewport = {}, }) {\n    const state = useRef({\n        hasEnteredView: false,\n        isInView: false,\n    });\n    let shouldObserve = Boolean(whileInView || onViewportEnter || onViewportLeave);\n    if (viewport.once && state.current.hasEnteredView)\n        shouldObserve = false;\n    const useObserver = typeof IntersectionObserver === \"undefined\"\n        ? useMissingIntersectionObserver\n        : useIntersectionObserver;\n    useObserver(shouldObserve, state.current, visualElement, viewport);\n}\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nfunction useIntersectionObserver(shouldObserve, state, visualElement, { root, margin: rootMargin, amount = \"some\", once }) {\n    useEffect(() => {\n        if (!shouldObserve || !visualElement.current)\n            return;\n        const options = {\n            root: root === null || root === void 0 ? void 0 : root.current,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const intersectionCallback = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (state.isInView === isIntersecting)\n                return;\n            state.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && state.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                state.hasEnteredView = true;\n            }\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const props = visualElement.getProps();\n            const callback = isIntersecting\n                ? props.onViewportEnter\n                : props.onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(visualElement.current, options, intersectionCallback);\n    }, [shouldObserve, root, rootMargin, amount]);\n}\n/**\n * If IntersectionObserver is missing, we activate inView and fire onViewportEnter\n * on mount. This way, the page will be in the state the author expects users\n * to see it in for everyone.\n */\nfunction useMissingIntersectionObserver(shouldObserve, state, visualElement, { fallback = true }) {\n    useEffect(() => {\n        if (!shouldObserve || !fallback)\n            return;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"IntersectionObserver not available on this device. whileInView animations will trigger on mount.\");\n        }\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         *\n         * This hook should be quite rarely called so setting this in an rAF\n         * is preferred to changing the behaviour of the animation state.\n         */\n        requestAnimationFrame(() => {\n            state.hasEnteredView = true;\n            const { onViewportEnter } = visualElement.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (visualElement.animationState) {\n                visualElement.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }, [shouldObserve]);\n}\n\nexport { useViewport };\n","const makeRenderlessComponent = (hook) => (props) => {\n    hook(props);\n    return null;\n};\n\nexport { makeRenderlessComponent };\n","import { useFocusGesture } from '../../gestures/use-focus-gesture.mjs';\nimport { useHoverGesture } from '../../gestures/use-hover-gesture.mjs';\nimport { useTapGesture } from '../../gestures/use-tap-gesture.mjs';\nimport { useViewport } from './viewport/use-viewport.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst gestureAnimations = {\n    inView: makeRenderlessComponent(useViewport),\n    tap: makeRenderlessComponent(useTapGesture),\n    focus: makeRenderlessComponent(useFocusGesture),\n    hover: makeRenderlessComponent(useHoverGesture),\n};\n\nexport { gestureAnimations };\n","import { useRef, useCallback } from 'react';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { addPointerEvent, usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\n/**\n * @param handlers -\n * @internal\n */\nfunction useTapGesture({ onTap, onTapStart, onTapCancel, whileTap, visualElement, ...props }) {\n    const hasPressListeners = onTap || onTapStart || onTapCancel || whileTap;\n    const isPressing = useRef(false);\n    const cancelPointerEndListeners = useRef(null);\n    /**\n     * Only set listener to passive if there are no external listeners.\n     */\n    const eventOptions = {\n        passive: !(onTapStart ||\n            onTap ||\n            onTapCancel ||\n            props[\"onPointerDown\"]),\n    };\n    function removePointerEndListener() {\n        cancelPointerEndListeners.current && cancelPointerEndListeners.current();\n        cancelPointerEndListeners.current = null;\n    }\n    function checkPointerEnd() {\n        removePointerEndListener();\n        isPressing.current = false;\n        const latestProps = visualElement.getProps();\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    function onPointerUp(event, info) {\n        var _a, _b, _c, _d;\n        if (!checkPointerEnd())\n            return;\n        /**\n         * We only count this as a tap gesture if the event.target is the same\n         * as, or a child of, this component's element\n         */\n        !isNodeOrChild(visualElement.current, event.target)\n            ? (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info)\n            : (_d = (_c = visualElement.getProps()).onTap) === null || _d === void 0 ? void 0 : _d.call(_c, event, info);\n    }\n    function onPointerCancel(event, info) {\n        var _a, _b;\n        if (!checkPointerEnd())\n            return;\n        (_b = (_a = visualElement.getProps()).onTapCancel) === null || _b === void 0 ? void 0 : _b.call(_a, event, info);\n    }\n    const startPress = useCallback((event, info) => {\n        var _a;\n        removePointerEndListener();\n        if (isPressing.current)\n            return;\n        isPressing.current = true;\n        cancelPointerEndListeners.current = pipe(addPointerEvent(window, \"pointerup\", onPointerUp, eventOptions), addPointerEvent(window, \"pointercancel\", onPointerCancel, eventOptions));\n        const latestProps = visualElement.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (latestProps.whileTap && visualElement.animationState) {\n            visualElement.animationState.setActive(AnimationType.Tap, true);\n        }\n        (_a = latestProps.onTapStart) === null || _a === void 0 ? void 0 : _a.call(latestProps, event, info);\n    }, [Boolean(onTapStart), visualElement]);\n    usePointerEvent(visualElement, \"pointerdown\", hasPressListeners ? startPress : undefined, eventOptions);\n    useUnmountEffect(removePointerEndListener);\n}\n\nexport { useTapGesture };\n","import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({ whileFocus, visualElement, }) {\n    const { animationState } = visualElement;\n    const onFocus = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, true);\n    }, [animationState]);\n    const onBlur = useCallback(() => {\n        animationState && animationState.setActive(AnimationType.Focus, false);\n    }, [animationState]);\n    useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n    useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\n\nexport { useFocusGesture };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    // Replace with useId when released in React\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"8.5.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    var _a;\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return (_a = defaultValueType.getAnimatableNone) === null || _a === void 0 ? void 0 : _a.call(defaultValueType, value);\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        var _a;\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => {\n            setVariants(child, variantLabels);\n        });\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    var _a;\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        origin[key] =\n            transitionOrigin !== undefined\n                ? transitionOrigin\n                : (_a = visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.get();\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animate({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    var _a, _b;\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    if ((_b = (_a = animator).needsInterpolation) === null || _b === void 0 ? void 0 : _b.call(_a, origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animate, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animate } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animate({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animate({ ...options, autoplay: false });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","import { animate } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop();\n        currentAnimation = animate({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                var _a;\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(v);\n                (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation === null || currentAnimation === void 0 ? void 0 : currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animate } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        const visualElement = value.owner;\n        const element = visualElement && visualElement.current;\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (visualElement &&\n            element instanceof HTMLElement &&\n            !(visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onUpdate)) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animate(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = ((_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.size)\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type && ((_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.getState()[type]);\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { useEffect, useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { usePresence } from '../../components/AnimatePresence/use-presence.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { createAnimationState } from '../../render/utils/animation-state.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst animations = {\n    animation: makeRenderlessComponent(({ visualElement, animate }) => {\n        /**\n         * We dynamically generate the AnimationState manager as it contains a reference\n         * to the underlying animation library. We only want to load that if we load this,\n         * so people can optionally code split it out using the `m` component.\n         */\n        visualElement.animationState || (visualElement.animationState = createAnimationState(visualElement));\n        /**\n         * Subscribe any provided AnimationControls to the component's VisualElement\n         */\n        if (isAnimationControls(animate)) {\n            useEffect(() => animate.subscribe(visualElement), [animate]);\n        }\n    }),\n    exit: makeRenderlessComponent((props) => {\n        const { custom, visualElement } = props;\n        const [isPresent, safeToRemove] = usePresence();\n        const presenceContext = useContext(PresenceContext);\n        useEffect(() => {\n            visualElement.isPresent = isPresent;\n            const animation = visualElement.animationState &&\n                visualElement.animationState.setActive(AnimationType.Exit, !isPresent, {\n                    custom: (presenceContext && presenceContext.custom) ||\n                        custom,\n                });\n            if (animation && !isPresent) {\n                animation.then(safeToRemove);\n            }\n        }, [isPresent]);\n    }),\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { sync, cancelSync } from '../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../events/use-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { distance2D } from '../utils/distance.mjs';\nimport { frameData } from '../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin === null || origin === void 0 ? void 0 : origin.originX);\n    calcAxisDelta(delta.y, source.y, target.y, origin === null || origin === void 0 ? void 0 : origin.originY);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    var _a, _b;\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        if (((_b = (_a = node.instance) === null || _a === void 0 ? void 0 : _a.style) === null || _b === void 0 ? void 0 : _b.display) === \"contents\")\n            continue;\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/use-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        if (this.visualElement.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            var _a;\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                var _a, _b;\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const measuredAxis = (_b = (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout) === null || _b === void 0 ? void 0 : _b.layoutBox[axis];\n                    if (measuredAxis) {\n                        const length = calcLength(measuredAxis);\n                        current = length * (parseFloat(current) / 100);\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart === null || onDragStart === void 0 ? void 0 : onDragStart(event, info);\n            (_a = this.visualElement.animationState) === null || _a === void 0 ? void 0 : _a.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock === null || onDirectionLock === void 0 ? void 0 : onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag === null || onDrag === void 0 ? void 0 : onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd === null || onDragEnd === void 0 ? void 0 : onDragEnd(event, info);\n    }\n    cancel() {\n        var _a, _b;\n        this.isDragging = false;\n        if (this.visualElement.projection) {\n            this.visualElement.projection.isAnimationBlocked = false;\n        }\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        (_b = this.visualElement.animationState) === null || _b === void 0 ? void 0 : _b.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints === null || constraints === void 0 ? void 0 : constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        var _a;\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const externalMotionValue = this.visualElement.getProps()[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, ((_a = this.visualElement.getProps().initial) === null || _a === void 0 ? void 0 : _a[axis]) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        var _a;\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            (_a = projection.root) === null || _a === void 0 ? void 0 : _a.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener === null || stopLayoutUpdateListener === void 0 ? void 0 : stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","import { useDrag } from '../../gestures/drag/use-drag.mjs';\nimport { usePanGesture } from '../../gestures/use-pan-gesture.mjs';\nimport { makeRenderlessComponent } from '../utils/make-renderless-component.mjs';\n\nconst drag = {\n    pan: makeRenderlessComponent(usePanGesture),\n    drag: makeRenderlessComponent(useDrag),\n};\n\nexport { drag };\n","import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useUnmountEffect } from '../utils/use-unmount-effect.mjs';\nimport { usePointerEvent } from '../events/use-pointer-event.mjs';\nimport { PanSession } from './PanSession.mjs';\n\n/**\n *\n * @param handlers -\n * @param ref -\n *\n * @privateRemarks\n * Currently this sets new pan gesture functions every render. The memo route has been explored\n * in the past but ultimately we're still creating new functions every render. An optimisation\n * to explore is creating the pan gestures and loading them into a `ref`.\n *\n * @internal\n */\nfunction usePanGesture({ onPan, onPanStart, onPanEnd, onPanSessionStart, visualElement, }) {\n    const hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n    const panSession = useRef(null);\n    const { transformPagePoint } = useContext(MotionConfigContext);\n    const handlers = {\n        onSessionStart: onPanSessionStart,\n        onStart: onPanStart,\n        onMove: onPan,\n        onEnd: (event, info) => {\n            panSession.current = null;\n            onPanEnd && onPanEnd(event, info);\n        },\n    };\n    useEffect(() => {\n        if (panSession.current !== null) {\n            panSession.current.updateHandlers(handlers);\n        }\n    });\n    function onPointerDown(event) {\n        panSession.current = new PanSession(event, handlers, {\n            transformPagePoint,\n        });\n    }\n    usePointerEvent(visualElement, \"pointerdown\", hasPanEvents && onPointerDown);\n    useUnmountEffect(() => panSession.current && panSession.current.end());\n}\n\nexport { usePanGesture };\n","import { useEffect } from 'react';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * A hook that allows an element to be dragged.\n *\n * @internal\n */\nfunction useDrag(props) {\n    const { dragControls: groupDragControls, visualElement } = props;\n    const dragControls = useConstant(() => new VisualElementDragControls(visualElement));\n    // If we've been provided a DragControls for manual control over the drag gesture,\n    // subscribe this component to it on mount.\n    useEffect(() => groupDragControls && groupDragControls.subscribe(dragControls), [dragControls, groupDragControls]);\n    // Apply the event listeners to the element\n    useEffect(() => dragControls.addListeners(), [dragControls]);\n}\n\nexport { useDrag };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { invariant } from 'hey-listen';\nimport { createElement } from 'react';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Tracks whether this VisualElement's React component is currently present\n         * within the defined React tree.\n         */\n        this.isPresent = true;\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        var _a;\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = (_a = this.parent) === null || _a === void 0 ? void 0 : _a.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.setProps(this.props);\n    }\n    unmount() {\n        var _a, _b, _c;\n        (_a = this.projection) === null || _a === void 0 ? void 0 : _a.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        (_b = this.removeFromVariantTree) === null || _b === void 0 ? void 0 : _b.call(this);\n        (_c = this.parent) === null || _c === void 0 ? void 0 : _c.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type)\n            return 0;\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, ProjectionNodeConstructor, initialLayoutGroupConfig) {\n        const features = [];\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            invariant(false, \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\");\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Component } = featureDefinitions[name];\n            /**\n             * It might be possible in the future to use this moment to\n             * dynamically request functionality. In initial tests this\n             * was producing a lot of duplication amongst bundles.\n             */\n            if (isEnabled(renderedProps) && Component) {\n                features.push(createElement(Component, {\n                    key: name,\n                    ...renderedProps,\n                    visualElement: this,\n                }));\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return features;\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    setProps(props) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        const prevProps = this.props;\n        this.props = props;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        var _a;\n        return (_a = this.props.variants) === null || _a === void 0 ? void 0 : _a[name];\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        var _a;\n        return this.isVariantNode ? this : (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getClosestVariantNode();\n    }\n    getVariantContext(startAtParent = false) {\n        var _a, _b;\n        if (startAtParent)\n            return (_a = this.parent) === null || _a === void 0 ? void 0 : _a.getVariantContext();\n        if (!this.isControllingVariants) {\n            const context = ((_b = this.parent) === null || _b === void 0 ? void 0 : _b.getVariantContext()) || {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        var _a;\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            (_a = closestVariantNode.variantChildren) === null || _a === void 0 ? void 0 : _a.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        var _a;\n        this.values.delete(key);\n        (_a = this.valueSubscriptions.get(key)) === null || _a === void 0 ? void 0 : _a();\n        this.valueSubscriptions.delete(key);\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        var _a;\n        (_a = this.events[eventName]) === null || _a === void 0 ? void 0 : _a.notify(...args);\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"8.5.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 8.5.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        var _a;\n        return (_a = props.style) === null || _a === void 0 ? void 0 : _a[key];\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        var _a;\n        if (transformProps.has(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    var _a;\n                    if (!((_a = projection.getStack()) === null || _a === void 0 ? void 0 : _a.members.length)) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup === null || layoutGroup === void 0 ? void 0 : layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext === null || promoteContext === void 0 ? void 0 : promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove === null || safeToRemove === void 0 ? void 0 : safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { MeasureLayout } from './MeasureLayout.mjs';\n\nconst layoutFeatures = {\n    measureLayout: MeasureLayout,\n};\n\nexport { layoutFeatures };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox === null || originBox === void 0 ? void 0 : originBox.x, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.x);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox === null || originBox === void 0 ? void 0 : originBox.y, sourceBox === null || sourceBox === void 0 ? void 0 : sourceBox.y);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        var _a;\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if ((_a = node.root) === null || _a === void 0 ? void 0 : _a.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            var _a, _b, _c, _d, _e;\n            (_b = (_a = node.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_e = (_c = node.resumingFrom) === null || _c === void 0 ? void 0 : (_d = _c.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d);\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager === null || subscriptionManager === void 0 ? void 0 : subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            var _a;\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    var _a, _b, _c, _d, _e;\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = (_b = (_a = this.options.transition) !== null && _a !== void 0 ? _a : visualElement.getDefaultTransition()) !== null && _b !== void 0 ? _b : defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        ((_c = this.resumeFrom) === null || _c === void 0 ? void 0 : _c.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        this.isLead() && ((_e = (_d = this.options).onExitComplete) === null || _e === void 0 ? void 0 : _e.call(_d));\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            var _a, _b;\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.remove(this);\n            (_b = this.parent) === null || _b === void 0 ? void 0 : _b.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            var _a;\n            return (this.isAnimationBlocked ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            var _a;\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            (_a = this.nodes) === null || _a === void 0 ? void 0 : _a.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            var _a;\n            return (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            var _a, _b, _c;\n            if (this.root.isUpdateBlocked()) {\n                (_b = (_a = this.options).onExitComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            this.prevTransformTemplateValue = (_c = this.getTransformTemplate()) === null || _c === void 0 ? void 0 : _c(this.latestValues, \"\");\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            var _a;\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout === null || prevLayout === void 0 ? void 0 : prevLayout.layoutBox);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            var _a;\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplateValue = (_a = this.getTransformTemplate()) === null || _a === void 0 ? void 0 : _a(this.latestValues, \"\");\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            var _a;\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, (_a = node.snapshot) === null || _a === void 0 ? void 0 : _a.layoutBox, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.target)) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            var _a;\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean(((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a, _b, _c;\n            (_b = (_a = this.options).scheduleRender) === null || _b === void 0 ? void 0 : _b.call(_a);\n            notifyAll && ((_c = this.getStack()) === null || _c === void 0 ? void 0 : _c.scheduleRender());\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            var _a, _b;\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.latestValues) || {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const isSharedLayoutAnimation = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.source) !== ((_a = this.layout) === null || _a === void 0 ? void 0 : _a.source);\n            const isOnlyMember = (((_b = this.getStack()) === null || _b === void 0 ? void 0 : _b.members.length) || 0) <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                var _a;\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    ((_a = this.relativeParent) === null || _a === void 0 ? void 0 : _a.layout)) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            var _a, _b;\n            this.notifyListeners(\"animationStart\");\n            (_a = this.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();\n            if (this.resumingFrom) {\n                (_b = this.resumingFrom.currentAnimation) === null || _b === void 0 ? void 0 : _b.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        var _a;\n                        this.mixTargetDelta(latest);\n                        (_a = options.onUpdate) === null || _a === void 0 ? void 0 : _a.call(options, latest);\n                    },\n                    onComplete: () => {\n                        var _a;\n                        (_a = options.onComplete) === null || _a === void 0 ? void 0 : _a.call(options);\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            var _a;\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            var _a;\n            if (this.currentAnimation) {\n                (_a = this.mixTargetDelta) === null || _a === void 0 ? void 0 : _a.call(this, animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            var _a, _b, _c;\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            node.promote({\n                transition: (_a = node.options.initialPromotionConfig) === null || _a === void 0 ? void 0 : _a.transition,\n                preserveFollowOpacity: (_c = (_b = node.options.initialPromotionConfig) === null || _b === void 0 ? void 0 : _b.shouldPreserveFollowOpacity) === null || _c === void 0 ? void 0 : _c.call(_b, node),\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement === null || visualElement === void 0 ? void 0 : visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a, _b, _c;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        (_c = (_b = node.options).onExitComplete) === null || _c === void 0 ? void 0 : _c.call(_b);\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement === null || visualElement === void 0 ? void 0 : visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/use-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layoutFeatures } from '../../motion/features/layout/index.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst featureBundle = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layoutFeatures,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, featureBundle, createDomVisualElement, HTMLProjectionNode));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, featureBundle, createDomVisualElement, HTMLProjectionNode));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement, projectionNodeConstructor) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        projectionNodeConstructor,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","LayoutGroupContext","createContext","PresenceContext","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","window","callback","requestAnimationFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","has","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","forEach","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","presenceId","id","undefined","blockInitialAnimation","initial","useIsomorphicLayoutEffect","render","HandoffAppearAnimations","useEffect","animationState","animateChanges","isRefObject","ref","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","createDefinition","propNames","isEnabled","featureDefinitions","measureLayout","animation","exit","drag","focus","hover","tap","pan","inView","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","VisualElementHandler","this","setProps","children","React__default","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","preloadedFeatures","projectionNodeConstructor","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","configAndProps","layoutId","useLayoutId","projectionId","useConstant","isBrowser","lazyStrictMode","initialLayoutGroupConfig","React","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","layout","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","sortTransformProps","a","b","isCSSVariable","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformKeys","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","sort","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","filterProps","isDom","forwardMotionProps","filteredProps","values","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","AnimationType","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","useDomEvent","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","usePointerEvent","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","createHoverEvent","isActive","applyVariants","info","setActive","Hover","isNodeOrChild","child","parentElement","combineFunctions","pipe","transformers","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","useIntersectionObserver","shouldObserve","rootMargin","amount","once","threshold","isIntersecting","isInView","hasEnteredView","InView","getProps","onViewportEnter","onViewportLeave","useMissingIntersectionObserver","fallback","makeRenderlessComponent","hook","gestureAnimations","whileInView","viewport","onTap","onTapStart","onTapCancel","whileTap","hasPressListeners","isPressing","cancelPointerEndListeners","eventOptions","removePointerEndListener","checkPointerEnd","Tap","onPointerUp","_b","_c","_d","onPointerCancel","startPress","latestProps","useUnmountEffect","whileFocus","onFocus","Focus","onBlur","onHoverStart","onHoverEnd","whileHover","usePresence","isPresent","onExitComplete","register","useId","shallowCompare","next","prev","prevLength","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","noop","any","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","keyframes","keyframeValues","times","duration","easingFunctions","isEasingArray","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","update","passTimestamp","driverControls","interpolateFromNumber","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","timeout","checkElapsed","createInstantAnimation","setValue","inertia","currentAnimation","bounceStiffness","bounceDamping","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","createMotionValueAnimation","valueTransition","originKeyframe","targetKeyframe","isOriginAnimatable","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animateChildren","first","last","willChange","animations","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","subscribe","safeToRemove","distance2D","xDelta","yDelta","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","getCurrentDirection","updateAxis","panSession","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","latest","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","lockThreshold","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","updateHandlers","groupDragControls","dragControls","addListeners","cssVariableRegex","parseCSSVariable","exec","getVariableValue","depth","token","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","TypeError","BoundingBoxDimension","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","setStaticValue","targetBbox","jump","unitConversion","hasPositionalKey","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","scrollY","pageYOffset","convertedTarget","scrollTo","checkAndConvertChangedValueTypes","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","scheduleRender","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","matches","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","isTransformDirty","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","ProjectionNodeConstructor","renderedProps","layoutScroll","layoutRoot","setOptions","alwaysMeasureLayout","animationType","initialPromotionConfig","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","args","DOMVisualElement","compareDocumentPosition","isMounted","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","arguments","getAttribute","createDomVisualElement","pixelsToPercent","pixels","correctBorderRadius","correct","node","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","layoutDependency","willUpdate","promote","relegate","getStack","members","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","applyTo","boxShadow","layoutFeatures","borders","numBorders","asNumber","isPx","mixValues","follow","lead","shouldCrossfadeOpacity","isOnlyMember","easeCrossfadeIn","opacityExit","easeCrossfadeOut","borderLabel","followRadius","getRadius","leadRadius","radiusName","compress","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","prevLead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","_e","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","prevTransformTemplateValue","getTransformTemplate","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundBox","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixBox","isAnimating","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","stack","hasRotate","resetValues","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","mixAxis","searchNode","querySelector","roundAxis","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","featureBundle","motion","baseConfig","createDomMotionConfig","useLayoutEffect"],"sourceRoot":""}