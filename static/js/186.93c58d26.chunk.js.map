{"version":3,"file":"static/js/186.93c58d26.chunk.js","mappings":"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","sources":["components/AuthForms/LoginForm.styled.jsx","components/AuthForms/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport MaskedInput from 'react-text-mask';\nimport mobileBackground from '../../images/mobileAuthBackground.png';\nimport tabletBackground from '../../images/tableAuthBackground.png';\nimport desktopBackground from '../../images/desktopAuthBackground.png';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 58px);\n  background-image: url(${mobileBackground});\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  @media (min-width: 768px) {\n    background-image: url(${tabletBackground});\n    padding-top: 184px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n  }\n  @media (min-width: 1280px) {\n    background-image: url(${desktopBackground});\n    padding-top: 50px;\n    padding-bottom: 147px;\n  }\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const Form1 = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  padding-bottom: 40px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: #fff;\n    border-radius: 40px;\n    -webkit-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    -moz-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\nexport const PhoneInput = styled(MaskedInput)`\n  width: 280px;\n  padding: 11px 0 12px 14px;\n  background: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    padding: 14px 0 13px 32px;\n    font-size: 18px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\nexport const ForgotPassword = styled.button`\n  position: absolute;\n  right: 0px;\n  bottom: 0;\n  background-color: transparent;\n  border: none;\n  text-decoration: underline;\n  color: ${p => p.theme.colors.link};\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #f59256;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const BackButton = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #000;\n  background: #fff;\n  border: 1px solid #f59256;\n  border-radius: 40px;\n  margin: -26px 0 40px 0;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 0.5s;\n  overflow: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(245, 146, 86, 0.9),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0px;\n  left: 15px;\n  color: red;\n  font-size: 14px;\n  font-style: italic;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\n\nexport const ButtonModal = styled.button`\n    @media screen and (max-width: 767px) {\n    &:last-child {\n      margin-top: 12px;\n    }\n  }\n  cursor: pointer;\n  background-color: ${p =>\n    p.filling ? p.theme.colors.accent : p.theme.colors.secondaryBackground};\n  border: 2px solid ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.radii.mainBorderRadius};\n  color: ${p =>\n    p.filling ? p.theme.colors.secondaryBackground : p.theme.colors.accent};\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 240px;\n  height: 50px;\n  gap: 8px;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: calc(22 / 16);\n  letter-spacing: 0.04em;\n  transition: transform 0.5s;\n  position: relative;\n  overflow: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    ${p => {\n      if (!p.filling) {\n        return `background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(245, 146, 86, 0.9),\n      transparent\n    );`;\n      } else {\n        return `\n      background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n      `;\n      }\n    }}\n    transition: all 650ms;\n  }\n  @media screen and (min-width: 768px) {\n    width: 448px;\n    margin-bottom: 16px;\n  }\n`;\n\nexport const RefreshInput = styled(Field)`\n  width: 240px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\n\nexport const FormRef = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  padding-bottom: 40px;\n  margin: 0 auto;\n  background-color: #fff;\n  border-radius: 20px;\n  -webkit-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  -moz-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  \n  @media (min-width: 768px) {\n    width: 608px;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    border-radius: 40px;\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n","import { object, string, ref } from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { useFormik, Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\n\nimport { register } from 'redux/auth/authOperations';\nimport {\n  Form1,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  BackButton,\n  PhoneInput,\n  ShowPassword,\n} from './LoginForm.styled';\n\nconst phoneNumberMask = [\n  '+',\n  '3',\n  '8',\n  '(',\n  /[0-9]/,\n  /\\d/,\n  /\\d/,\n\n  ')',\n\n  /\\d/,\n  /\\d/,\n  /\\d/,\n\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n];\n\nconst RegisterSchema = object().shape({\n  password: string()\n    .min(7, 'Too Short!')\n    .max(32, 'Too Long!')\n    .required('Password is required'),\n  confirmPassword: string()\n    .required('Please confirm your password')\n    .oneOf([ref('password')], 'Passwords does not match'),\n  email: string()\n    .matches(\n      /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/,\n      'Invalid email'\n    )\n    .email('Invalid email')\n    .required('Email is required'),\n  name: string()\n    .min(2, 'min 2 symbols')\n    .matches(/^[a-zA-Zа-яА-Я-`'іІїЇ]*$/, 'Only letters')\n    .required('Name is required'),\n  phone: string()\n    .min(13, 'Too Short!')\n    .matches(\n      /^(\\s*)?(\\+)?([- _():=+]?\\d[- _():=+]?){12}(\\s*)?$/,\n      'bad phone number'\n    )\n    .required('Phone is required'),\n  city: string()\n    .matches(\n      /^(([a-zA-Zа-яА-Я]([-]?)){1,})([^-,?,\\s,.,0-9,!])+(,)+((\\s?[a-zA-Zа-яА-Я](([-]?){0,1})){1,})([^-,?,.,\\s,0-9,!])$/,\n      'Error. Example: Brovary, Kyiv'\n    )\n    .required('City is required'),\n});\n\nexport const RegisterForm = () => {\n  const [isShown, setIsShown] = useState(true);\n  const [showPass, setShowPass] = useState(false);\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\n  const dispatch = useDispatch();\n  const showForm = () => {\n    setIsShown(false);\n  };\n  const hideForm = () => {\n    setIsShown(true);\n  };\n\n  const onSubmit = values => {\n    const { name, email, password, phone, city } = values;\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n        phone,\n        city,\n      }),\n      hideForm()\n    );\n  };\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      phone: '',\n      city: '',\n    },\n    validationSchema: RegisterSchema,\n    onSubmit,\n  });\n\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  const showConfirmPassword = () => {\n    setShowConfirmPass(!showConfirmPass);\n  };\n  const isValid =\n    (formik.errors.email && formik.touched.email) ||\n    (formik.errors.password && formik.touched.password) ||\n    (formik.errors.confirmPassword && formik.touched.confirmPassword) ||\n    formik.values.email === '' ||\n    formik.values.confirmPassword === ''\n      ? true\n      : false;\n\n  return (\n    <FormContainer>\n      <Formik validationSchema={RegisterSchema}>\n        <Form1 onSubmit={formik.handleSubmit}>\n          <Title>Register</Title>\n          {isShown && (\n            <>\n              <div>\n                <Input\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                  onBlur={formik.handleBlur}\n                />\n\n                {formik.errors.email || formik.touched.email ? (\n                  <ErrBox>{formik.errors.email}</ErrBox>\n                ) : null}\n              </div>\n            </>\n          )}\n\n          {isShown && (\n            <>\n              <div>\n                <Input\n                  name=\"password\"\n                  type={showPass ? 'text' : 'password'}\n                  placeholder=\"Password\"\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                  onBlur={formik.handleBlur}\n                />\n\n                <ShowPassword onClick={showPassword}>\n                  {!showPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.password && formik.touched.password ? (\n                  <ErrBox>{formik.errors.password}</ErrBox>\n                ) : null}\n              </div>\n            </>\n          )}\n          {isShown && (\n            <>\n              <div>\n                <Input\n                  name=\"confirmPassword\"\n                  type={showConfirmPass ? 'text' : 'password'}\n                  placeholder=\"Confirm Password\"\n                  onChange={formik.handleChange}\n                  value={formik.values.confirmPassword}\n                  onBlur={formik.handleBlur}\n                />\n                <ShowPassword onClick={showConfirmPassword}>\n                  {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\n                </ShowPassword>\n                {formik.errors.confirmPassword &&\n                formik.touched.confirmPassword ? (\n                  <ErrBox>{formik.errors.confirmPassword}</ErrBox>\n                ) : null}\n              </div>\n            </>\n          )}\n          {isShown && (\n            <Button type=\"button\" onClick={showForm} disabled={isValid}>\n              Next\n            </Button>\n          )}\n          {!isShown && (\n            <>\n              <div>\n                <Input\n                  name=\"name\"\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  onChange={formik.handleChange}\n                  value={formik.values.name}\n                  onBlur={formik.handleBlur}\n                />\n\n                {formik.errors.name && formik.touched.name ? (\n                  <ErrBox>{formik.errors.name}</ErrBox>\n                ) : null}\n              </div>\n            </>\n          )}\n          {!isShown && (\n            <>\n              <div>\n                <Input\n                  name=\"city\"\n                  type=\"text\"\n                  placeholder=\"City, region\"\n                  onChange={formik.handleChange}\n                  value={formik.values.city}\n                  onBlur={formik.handleBlur}\n                />\n\n                {formik.errors.city && formik.touched.city ? (\n                  <ErrBox>{formik.errors.city}</ErrBox>\n                ) : null}\n              </div>\n            </>\n          )}\n          {!isShown && (\n            <>\n              <div>\n                <PhoneInput\n                  mask={phoneNumberMask}\n                  id=\"phone\"\n                  type=\"phone\"\n                  placeholder=\"Mobile phone\"\n                  onChange={formik.handleChange}\n                  value={formik.values.phone}\n                  onBlur={formik.handleBlur}\n                  name=\"phone\"\n                />\n\n                {formik.errors.phone && formik.touched.phone ? (\n                  <ErrBox>{formik.errors.phone}</ErrBox>\n                ) : null}\n              </div>\n            </>\n          )}\n          {!isShown && <Button type=\"submit\">Register</Button>}\n          {!isShown && (\n            <BackButton type=\"button\" onClick={hideForm}>\n              Back\n            </BackButton>\n          )}\n          <div>\n            <span>Already have an account?</span> <Link to=\"/login\">Login</Link>\n          </div>\n        </Form1>\n      </Formik>\n    </FormContainer>\n  );\n};\n","import { RegisterForm } from 'components/AuthForms/RegisterForm';\nconst RegisterPage = () => {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["FormContainer","styled","mobileBackground","tabletBackground","desktopBackground","Title","Form1","Form","ShowPassword","Input","Field","PhoneInput","MaskedInput","ForgotPassword","p","theme","colors","link","Button","BackButton","ErrBox","ButtonModal","filling","accent","secondaryBackground","radii","mainBorderRadius","RefreshInput","FormRef","phoneNumberMask","RegisterSchema","object","shape","password","string","min","max","required","confirmPassword","oneOf","ref","email","matches","name","phone","city","RegisterForm","useState","isShown","setIsShown","showPass","setShowPass","showConfirmPass","setShowConfirmPass","dispatch","useDispatch","hideForm","formik","useFormik","initialValues","validationSchema","onSubmit","values","register","isValid","errors","touched","handleSubmit","type","placeholder","onChange","handleChange","value","onBlur","handleBlur","onClick","disabled","mask","id","to"],"sourceRoot":""}