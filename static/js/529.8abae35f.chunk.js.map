{"version":3,"file":"static/js/529.8abae35f.chunk.js","mappings":"8cAOaA,EAAgBC,EAAAA,GAAAA,IAAH,keAGAC,EAMEC,EAMAC,GAKfC,EAAQJ,EAAAA,GAAAA,GAAH,4LAULK,GAAQL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,iuBAiCLO,EAAeP,EAAAA,GAAAA,KAAH,qOAeZQ,GAAQR,EAAAA,EAAAA,IAAOS,EAAAA,GAAPT,CAAH,6bAsBLU,GAAaV,EAAAA,EAAAA,IAAOW,IAAPX,CAAH,oZAoBVY,EAAiBZ,EAAAA,GAAAA,OAAH,+HAQda,EAASb,EAAAA,GAAAA,OAAH,y/BAoDNc,EAAad,EAAAA,GAAAA,OAAH,gyBAyCVe,EAASf,EAAAA,GAAAA,IAAH,oN,0KClNbgB,GAAeC,EAAAA,EAAAA,MAASC,MAAM,CAClCC,UAAUC,EAAAA,EAAAA,MACPC,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,wBAEZC,OAAOJ,EAAAA,EAAAA,MAASI,MAAM,iBAAiBD,SAAS,oBAGrCE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAe,WACnBD,GAAaD,EACd,EACD,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEG,cAAe,CACbR,MAAO,GACPL,SAAU,IAEZc,iBAAkBjB,EAClBkB,SAAU,cAAyC,IAAtCV,EAAqC,EAArCA,MAAOL,EAA8B,EAA9BA,SAAcgB,EAAgB,EAAhBA,UAChCT,GAASU,EAAAA,EAAAA,IAAM,CAAEZ,MAAAA,EAAOL,SAAAA,KAExBgB,GACD,EAVH,SAYG,gBAAGE,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACC,UAAC,KAAD,YACE,SAAC,KAAD,qBACA,4BACE,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQC,YAAY,UAE5CJ,EAAOb,OAASc,EAAQd,OACvB,SAAC,KAAD,UAASa,EAAOb,QACd,SAEN,4BACE,SAAC,KAAD,CACEe,KAAK,WACLC,KAAMX,EAAW,OAAS,WAC1BY,YAAY,cAEd,SAAC,KAAD,CAAcC,QAASX,EAAvB,SACIF,GAA8B,SAAC,MAAD,KAAnB,SAAC,MAAD,OAEf,SAAC,KAAD,CAAgBW,KAAK,SAArB,8BACCH,EAAOlB,UAAYmB,EAAQnB,UAC1B,SAAC,KAAD,UAASkB,EAAOlB,WACd,SAGN,SAAC,KAAD,CAAQqB,KAAK,SAAb,oBAEA,4BACE,qDAAoC,KACpC,SAAC,KAAD,CAAMG,GAAG,YAAT,2BA7BL,KAoCR,ECzED,EARkB,WAChB,OACE,+BACE,SAAClB,EAAD,KAGL,C","sources":["components/AuthForms/LoginForm.styled.jsx","components/AuthForms/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field } from 'formik';\nimport MaskedInput from 'react-text-mask';\nimport mobileBackground from '../../images/mobileAuthBackground.png';\nimport tabletBackground from '../../images/tableAuthBackground.png';\nimport desktopBackground from '../../images/desktopAuthBackground.png';\n\nexport const FormContainer = styled.div`\n  width: 100%;\n  min-height: calc(100vh - 58px);\n  background-image: url(${mobileBackground});\n  background-position: bottom;\n  background-repeat: no-repeat;\n  background-size: contain;\n\n  @media (min-width: 768px) {\n    background-image: url(${tabletBackground});\n    padding-top: 184px;\n    padding-bottom: 268px;\n    min-height: calc(100vh - 64px);\n  }\n  @media (min-width: 1280px) {\n    background-image: url(${desktopBackground});\n    padding-top: 50px;\n    padding-bottom: 147px;\n  }\n`;\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  margin-bottom: 40px;\n  margin-top: 0;\n  @media (min-width: 768px) {\n    font-size: 36px;\n    font-weight: 500;\n  }\n`;\nexport const Form1 = styled(Form)`\n  position: relative;\n  width: 280px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 44px;\n  padding-bottom: 40px;\n  margin: 0 auto;\n\n  @media (min-width: 768px) {\n    width: 608px;\n    margin: 0 auto;\n    padding: 60px 0 40px 0;\n    background-color: #fff;\n    border-radius: 40px;\n    -webkit-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    -moz-box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n    box-shadow: 7px 4px 14px 0px rgba(0, 0, 0, 0.11);\n  }\n  @media (min-width: 1280px) {\n    width: 618px;\n    padding: 60px 0 60px 0;\n  }\n  > div {\n    position: relative;\n  }\n  :last-child {\n    font-size: 12px;\n  }\n`;\n\nexport const ShowPassword = styled.span`\n  display: inline-block;\n  position: absolute;\n  width: 25px;\n  height: 25px;\n  right: 15px;\n  top: 13px;\n  color: grey;\n  cursor: pointer;\n  svg {\n    width: inherit;\n    height: inherit;\n  }\n`;\n\nexport const Input = styled(Field)`\n  width: 280px;\n  font-size: 14px;\n  line-height: 1.3;\n  padding: 11px 0 12px 14px;\n  background: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    font-size: 18px;\n    padding: 14px 0 13px 32px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\nexport const PhoneInput = styled(MaskedInput)`\n  width: 280px;\n  padding: 11px 0 12px 14px;\n  background: #fdf7f2;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin-bottom: 16px;\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n  @media (min-width: 768px) {\n    width: 448px;\n    padding: 14px 0 13px 32px;\n    font-size: 18px;\n  }\n  @media (min-width: 1280px) {\n    width: 458px;\n  }\n`;\nexport const ForgotPassword = styled.button`\n  position: absolute;\n  right: 0px;\n  bottom: 0;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #fff;\n  background: #f59256;\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n  margin: 24px 0 40px 0;\n  transform: scale(1);\n  transition: transform 0.5s;\n  cursor: pointer;\n  position: relative;\n  overflow: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(255, 255, 255, 0.6),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: auto;\n    transform: none;\n    transition: none;\n  }\n  :disabled:before {\n    transform: none;\n    transition: none;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const BackButton = styled.button`\n  width: 100%;\n  padding: 11px 0 12px 14px;\n  text-align: center;\n  color: #000;\n  background: #fff;\n  border: 1px solid #f59256;\n  border-radius: 40px;\n  margin: -26px 0 40px 0;\n  cursor: pointer;\n  transform: scale(1);\n  transition: transform 0.5s;\n  overflow: hidden;\n  :hover,\n  :focus {\n    transform: scale(1.05);\n    transition: transform 0.5s;\n  }\n  :hover:before {\n    left: 100%;\n  }\n  :before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(\n      120deg,\n      transparent,\n      rgba(245, 146, 86, 0.9),\n      transparent\n    );\n    transition: all 650ms;\n  }\n  @media (min-width: 768px) {\n    width: 458px;\n    font-size: 20px;\n  }\n`;\nexport const ErrBox = styled.div`\n  position: absolute;\n  white-space: nowrap;\n  bottom: 0px;\n  left: 15px;\n  color: red;\n  font-size: 14px;\n  font-style: italic;\n  @media (min-width: 768px) {\n    left: 33px;\n  }\n`;\n","import { useState } from 'react';\nimport { object, string } from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { ImEye, ImEyeBlocked } from 'react-icons/im';\nimport {\n  Form1,\n  FormContainer,\n  Input,\n  Button,\n  Title,\n  ErrBox,\n  ForgotPassword,\n  ShowPassword,\n} from './LoginForm.styled';\nimport { login } from 'redux/auth/authOperations';\n\nconst SignupSchema = object().shape({\n  password: string()\n    .min(7, 'Too Short!')\n    .max(32, 'Too Long!')\n    .required('Password is required'),\n\n  email: string().email('Invalid email').required('Email Required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [showPass, setShowPass] = useState(false);\n  const showPassword = () => {\n    setShowPass(!showPass);\n  };\n  return (\n    <FormContainer>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={({ email, password }, { resetForm }) => {\n          dispatch(login({ email, password }));\n\n          resetForm();\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form1>\n            <Title>Login</Title>\n            <div>\n              <Input name=\"email\" type=\"email\" placeholder=\"Email\" />\n\n              {errors.email && touched.email ? (\n                <ErrBox>{errors.email}</ErrBox>\n              ) : null}\n            </div>\n            <div>\n              <Input\n                name=\"password\"\n                type={showPass ? 'text' : 'password'}\n                placeholder=\"Password\"\n              />\n              <ShowPassword onClick={showPassword}>\n                {!showPass ? <ImEyeBlocked /> : <ImEye />}\n              </ShowPassword>\n              <ForgotPassword type=\"button\">Forgot password?</ForgotPassword>\n              {errors.password && touched.password ? (\n                <ErrBox>{errors.password}</ErrBox>\n              ) : null}\n            </div>\n\n            <Button type=\"submit\">Login</Button>\n\n            <div>\n              <span>Don't have an account?</span>{' '}\n              <Link to=\"/register\">Register</Link>\n            </div>\n          </Form1>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n","import { LoginForm } from 'components/AuthForms/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["FormContainer","styled","mobileBackground","tabletBackground","desktopBackground","Title","Form1","Form","ShowPassword","Input","Field","PhoneInput","MaskedInput","ForgotPassword","Button","BackButton","ErrBox","SignupSchema","object","shape","password","string","min","max","required","email","LoginForm","dispatch","useDispatch","useState","showPass","setShowPass","showPassword","initialValues","validationSchema","onSubmit","resetForm","login","errors","touched","name","type","placeholder","onClick","to"],"sourceRoot":""}